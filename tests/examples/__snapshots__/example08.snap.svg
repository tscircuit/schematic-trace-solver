<svg width="640" height="640" viewBox="0 0 640 640" xmlns="http://www.w3.org/2000/svg">
  <rect width="100%" height="100%" fill="white" />
  <g>
    <circle data-type="point" data-label="R1.1
x-" data-x="3.4487093" data-y="0.0002732499999993365" cx="480.13769364637096" cy="333.5591221827183" r="3" fill="hsl(226, 100%, 50%, 0.8)" />
  </g>
  <g>
    <circle data-type="point" data-label="R1.2
x+" data-x="4.5512907" data-y="-0.0002732499999993365" cx="600" cy="333.6185325359331" r="3" fill="hsl(227, 100%, 50%, 0.8)" />
  </g>
  <g>
    <circle data-type="point" data-label="U1.1
x-" data-x="-0.6000000000000001" data-y="0.30000000000000004" cx="40.000000000000014" cy="300.975641696944" r="3" fill="hsl(319, 100%, 50%, 0.8)" />
  </g>
  <g>
    <circle data-type="point" data-label="U1.2
x-" data-x="-0.6000000000000001" data-y="0.10000000000000003" cx="40.000000000000014" cy="322.71776547186516" r="3" fill="hsl(320, 100%, 50%, 0.8)" />
  </g>
  <g>
    <circle data-type="point" data-label="U1.3
x-" data-x="-0.6000000000000001" data-y="-0.09999999999999998" cx="40.000000000000014" cy="344.45988924678625" r="3" fill="hsl(321, 100%, 50%, 0.8)" />
  </g>
  <g>
    <circle data-type="point" data-label="U1.4
x-" data-x="-0.6000000000000001" data-y="-0.30000000000000004" cx="40.000000000000014" cy="366.2020130217074" r="3" fill="hsl(322, 100%, 50%, 0.8)" />
  </g>
  <g>
    <circle data-type="point" data-label="U1.5
x+" data-x="0.6000000000000001" data-y="-0.30000000000000004" cx="170.45274264952667" cy="366.2020130217074" r="3" fill="hsl(323, 100%, 50%, 0.8)" />
  </g>
  <g>
    <circle data-type="point" data-label="U1.6
x+" data-x="0.6000000000000001" data-y="-0.10000000000000003" cx="170.45274264952667" cy="344.45988924678625" r="3" fill="hsl(324, 100%, 50%, 0.8)" />
  </g>
  <g>
    <circle data-type="point" data-label="U1.7
x+" data-x="0.6000000000000001" data-y="0.09999999999999998" cx="170.45274264952667" cy="322.71776547186516" r="3" fill="hsl(325, 100%, 50%, 0.8)" />
  </g>
  <g>
    <circle data-type="point" data-label="U1.8
x+" data-x="0.6000000000000001" data-y="0.30000000000000004" cx="170.45274264952667" cy="300.975641696944" r="3" fill="hsl(326, 100%, 50%, 0.8)" />
  </g>
  <g>
    <circle data-type="point" data-label="" data-x="0.8" data-y="0.30000000000000004" cx="192.19486642444775" cy="300.975641696944" r="3" fill="hsl(40, 100%, 50%, 0.9)" />
  </g>
  <g>
    <circle data-type="point" data-label="" data-x="1.3621773250000002" data-y="-2.7755575615628914e-17" cx="253.30951134246803" cy="333.5888273593257" r="3" fill="hsl(40, 100%, 50%, 0.9)" />
  </g>
  <g>
    <polyline data-points="-0.6000000000000001,0.30000000000000004 3.4487093,0.0002732499999993365" data-type="line" data-label="" points="40.000000000000014,300.975641696944 480.13769364637096,333.5591221827183" fill="none" stroke="hsl(248, 100%, 50%, 0.8)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="0.6000000000000001,-0.10000000000000003 4.5512907,-0.0002732499999993365" data-type="line" data-label="" points="170.45274264952667,344.45988924678625 600,333.6185325359331" fill="none" stroke="hsl(248, 100%, 50%, 0.8)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="-0.6000000000000001,0.30000000000000004 0.8,0.30000000000000004 0.8,-0.19972675000000067 3.3487093000000003,-0.19972675000000067 3.3487093000000003,0.0002732499999993365 3.4487093000000004,0.0002732499999993365" data-type="line" data-label="" points="40.000000000000014,300.975641696944 192.19486642444775,300.975641696944 192.19486642444775,355.3012459576394 469.2666317589104,355.3012459576394 469.2666317589104,333.5591221827183 480.13769364637096,333.5591221827183" fill="none" stroke="purple" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="0.6000000000000001,-0.10000000000000003 0.7000000000000001,-0.10000000000000003 0.7000000000000001,-2.7755575615628914e-17 2.0243546500000003,-2.7755575615628914e-17 2.0243546500000003,0.09972675000000067 4.4512907,0.09972675000000067 4.4512907,-0.0002732499999993365 4.5512907,-0.0002732499999993365" data-type="line" data-label="" points="170.45274264952667,344.45988924678625 181.3238045369872,344.45988924678625 181.3238045369872,333.5888273593257 325.29521814794884,333.5888273593257 325.29521814794884,322.7474706484726 589.1289381125395,322.7474706484726 589.1289381125395,333.6185325359331 600,333.6185325359331" fill="none" stroke="purple" stroke-width="1" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_component_0" data-x="4" data-y="0" x="480.13769364637096" y="312.4494659173477" width="119.86230635362904" height="42.27872288395599" fill="hsl(24, 100%, 50%, 0.8)" stroke="black" stroke-width="0.009198733392857143" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_component_1" data-x="0" data-y="0" x="40.000000000000014" y="279.23351792202294" width="130.45274264952667" height="108.71061887460553" fill="hsl(24, 100%, 50%, 0.8)" stroke="black" stroke-width="0.009198733392857143" />
  </g>
  <g>
    <rect data-type="rect" data-label="" data-x="0.8" data-y="0.525" x="181.3238045369872" y="252.05586320337156" width="21.742123774921083" height="48.919778493572466" fill="hsl(40, 100%, 50%, 0.35)" stroke="black" stroke-width="0.009198733392857143" />
  </g>
  <g>
    <rect data-type="rect" data-label="" data-x="1.3621773250000002" data-y="0.22499999999999998" x="242.43844945500746" y="284.6690488657532" width="21.74212377492114" height="48.919778493572494" fill="hsl(40, 100%, 50%, 0.35)" stroke="black" stroke-width="0.009198733392857143" />
  </g>
  <g id="crosshair" style="display: none">
    <line id="crosshair-h" y1="0" y2="640" stroke="#666" stroke-width="0.5" />
    <line id="crosshair-v" x1="0" x2="640" stroke="#666" stroke-width="0.5" /><text id="coordinates" font-family="monospace" font-size="12" fill="#666"></text>
  </g>
  <script>
    <![CDATA[
    document.currentScript.parentElement.addEventListener('mousemove', (e) => {
      const svg = e.currentTarget;
      const rect = svg.getBoundingClientRect();
      const x = e.clientX - rect.left;
      const y = e.clientY - rect.top;
      const crosshair = svg.getElementById('crosshair');
      const h = svg.getElementById('crosshair-h');
      const v = svg.getElementById('crosshair-v');
      const coords = svg.getElementById('coordinates');

      crosshair.style.display = 'block';
      h.setAttribute('x1', '0');
      h.setAttribute('x2', '640');
      h.setAttribute('y1', y);
      h.setAttribute('y2', y);
      v.setAttribute('x1', x);
      v.setAttribute('x2', x);
      v.setAttribute('y1', '0');
      v.setAttribute('y2', '640');

      // Calculate real coordinates using inverse transformation
      const matrix = {
        "a": 108.71061887460553,
        "c": 0,
        "e": 105.22637132476333,
        "b": 0,
        "d": -108.71061887460553,
        "f": 333.5888273593257
      };
      // Manually invert and apply the affine transform
      // Since we only use translate and scale, we can directly compute:
      // x' = (x - tx) / sx
      // y' = (y - ty) / sy
      const sx = matrix.a;
      const sy = matrix.d;
      const tx = matrix.e;
      const ty = matrix.f;
      const realPoint = {
        x: (x - tx) / sx,
        y: (y - ty) / sy // Flip y back since we used negative scale
      }

      coords.textContent = `(${realPoint.x.toFixed(2)}, ${realPoint.y.toFixed(2)})`;
      coords.setAttribute('x', (x + 5).toString());
      coords.setAttribute('y', (y - 5).toString());
    });
    document.currentScript.parentElement.addEventListener('mouseleave', () => {
      document.currentScript.parentElement.getElementById('crosshair').style.display = 'none';
    });
    ]]>
  </script>
</svg>