<svg width="640" height="640" viewBox="0 0 640 640" xmlns="http://www.w3.org/2000/svg">
  <rect width="100%" height="100%" fill="white" />
  <g>
    <circle data-type="point" data-label="U1.1
x-" data-x="-0.8" data-y="0.2" cx="390.63520871143373" cy="299.6733212341198" r="3" fill="hsl(319, 100%, 50%, 0.8)" />
  </g>
  <g>
    <circle data-type="point" data-label="U1.2
x-" data-x="-0.8" data-y="0" cx="390.63520871143373" cy="320" r="3" fill="hsl(320, 100%, 50%, 0.8)" />
  </g>
  <g>
    <circle data-type="point" data-label="U1.3
x-" data-x="-0.8" data-y="-0.2" cx="390.63520871143373" cy="340.3266787658802" r="3" fill="hsl(321, 100%, 50%, 0.8)" />
  </g>
  <g>
    <circle data-type="point" data-label="U1.4
x+" data-x="0.8" data-y="-0.2" cx="553.2486388384755" cy="340.3266787658802" r="3" fill="hsl(322, 100%, 50%, 0.8)" />
  </g>
  <g>
    <circle data-type="point" data-label="U1.5
x+" data-x="0.8" data-y="0" cx="553.2486388384755" cy="320" r="3" fill="hsl(323, 100%, 50%, 0.8)" />
  </g>
  <g>
    <circle data-type="point" data-label="U1.6
x+" data-x="0.8" data-y="0.2" cx="553.2486388384755" cy="299.6733212341198" r="3" fill="hsl(324, 100%, 50%, 0.8)" />
  </g>
  <g>
    <circle data-type="point" data-label="C1.1
y+" data-x="-2" data-y="0.5" cx="268.67513611615243" cy="269.1833030852995" r="3" fill="hsl(121, 100%, 50%, 0.8)" />
  </g>
  <g>
    <circle data-type="point" data-label="C1.2
y-" data-x="-2" data-y="-0.5" cx="268.67513611615243" cy="370.8166969147005" r="3" fill="hsl(122, 100%, 50%, 0.8)" />
  </g>
  <g>
    <circle data-type="point" data-label="C2.1
y+" data-x="-4" data-y="0.5" cx="65.40834845735026" cy="269.1833030852995" r="3" fill="hsl(2, 100%, 50%, 0.8)" />
  </g>
  <g>
    <circle data-type="point" data-label="C2.2
y-" data-x="-4" data-y="-0.5" cx="65.40834845735026" cy="370.8166969147005" r="3" fill="hsl(3, 100%, 50%, 0.8)" />
  </g>
  <g>
    <circle data-type="point" data-label="" data-x="-1.4" data-y="0.7" cx="329.6551724137931" cy="248.85662431941924" r="3" fill="hsl(40, 100%, 50%, 0.9)" />
  </g>
  <g>
    <circle data-type="point" data-label="" data-x="-0.8" data-y="0" cx="390.63520871143373" cy="320" r="3" fill="hsl(40, 100%, 50%, 0.9)" />
  </g>
  <g>
    <circle data-type="point" data-label="" data-x="-4" data-y="0.5" cx="65.40834845735026" cy="269.1833030852995" r="3" fill="hsl(40, 100%, 50%, 0.9)" />
  </g>
  <g>
    <circle data-type="point" data-label="" data-x="-1.4" data-y="-0.7" cx="329.6551724137931" cy="391.1433756805808" r="3" fill="hsl(40, 100%, 50%, 0.9)" />
  </g>
  <g>
    <polyline data-points="-0.8,0.2 -2,0.5" data-type="line" data-label="" points="390.63520871143373,299.6733212341198 268.67513611615243,269.1833030852995" fill="none" stroke="hsl(190, 100%, 50%, 0.8)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="-0.8,0 -4,0.5" data-type="line" data-label="" points="390.63520871143373,320 65.40834845735026,269.1833030852995" fill="none" stroke="hsl(57, 100%, 50%, 0.8)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="-0.8,-0.2 -4,-0.5" data-type="line" data-label="" points="390.63520871143373,340.3266787658802 65.40834845735026,370.8166969147005" fill="none" stroke="hsl(157, 100%, 50%, 0.8)" stroke-width="1" stroke-dasharray="4 2" />
  </g>
  <g>
    <polyline data-points="-0.8,-0.2 -2,-0.5" data-type="line" data-label="" points="390.63520871143373,340.3266787658802 268.67513611615243,370.8166969147005" fill="none" stroke="hsl(157, 100%, 50%, 0.8)" stroke-width="1" stroke-dasharray="4 2" />
  </g>
  <g>
    <polyline data-points="-4,-0.5 -2,-0.5" data-type="line" data-label="" points="65.40834845735026,370.8166969147005 268.67513611615243,370.8166969147005" fill="none" stroke="hsl(157, 100%, 50%, 0.8)" stroke-width="1" stroke-dasharray="4 2" />
  </g>
  <g>
    <polyline data-points="-0.8,0.20000000000000018 -1.4,0.20000000000000018 -1.4,0.7 -2,0.7 -2,0.5" data-type="line" data-label="" points="390.63520871143373,299.6733212341198 329.6551724137931,299.6733212341198 329.6551724137931,248.85662431941924 268.67513611615243,248.85662431941924 268.67513611615243,269.1833030852995" fill="none" stroke="purple" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="-0.8,-0.20000000000000018 -1.4,-0.20000000000000018 -1.4,-0.7 -2,-0.7 -2,-0.5" data-type="line" data-label="" points="390.63520871143373,340.3266787658802 329.6551724137931,340.3266787658802 329.6551724137931,391.1433756805808 268.67513611615243,391.1433756805808 268.67513611615243,370.8166969147005" fill="none" stroke="purple" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="-4,-0.5 -4,-0.7000000000000002 -2,-0.7000000000000002 -2,-0.5" data-type="line" data-label="" points="65.40834845735026,370.8166969147005 65.40834845735026,391.1433756805808 268.67513611615243,391.1433756805808 268.67513611615243,370.8166969147005" fill="none" stroke="purple" stroke-width="1" />
  </g>
  <g>
    <rect data-type="rect" data-label="U1" data-x="0" data-y="0" x="390.63520871143373" y="289.50998185117965" width="162.61343012704174" height="60.98003629764071" fill="hsl(164, 100%, 50%, 0.8)" stroke="black" stroke-width="0.009839285714285715" />
  </g>
  <g>
    <rect data-type="rect" data-label="C1" data-x="-2" data-y="0" x="243.26678765880217" y="269.1833030852995" width="50.816696914700515" height="101.63339382940103" fill="hsl(326, 100%, 50%, 0.8)" stroke="black" stroke-width="0.009839285714285715" />
  </g>
  <g>
    <rect data-type="rect" data-label="C2" data-x="-4" data-y="0" x="40" y="269.1833030852995" width="50.816696914700515" height="101.63339382940103" fill="hsl(327, 100%, 50%, 0.8)" stroke="black" stroke-width="0.009839285714285715" />
  </g>
  <g>
    <rect data-type="rect" data-label="" data-x="-1.4" data-y="0.9249999999999999" x="319.49183303085294" y="203.12159709618876" width="20.326678765880274" height="45.735027223230475" fill="hsl(40, 100%, 50%, 0.35)" stroke="black" stroke-width="0.009839285714285715" />
  </g>
  <g>
    <rect data-type="rect" data-label="" data-x="1.0350000000000001" data-y="0" x="554.2649727767695" y="309.8366606170599" width="45.73502722323053" height="20.32667876588016" fill="hsl(40, 100%, 50%, 0.35)" stroke="black" stroke-width="0.009839285714285715" />
  </g>
  <g>
    <rect data-type="rect" data-label="" data-x="-3.5149999999999997" data-y="0.5" x="91.83303085299457" y="259.01996370235935" width="45.735027223230475" height="20.326678765880217" fill="hsl(40, 100%, 50%, 0.35)" stroke="black" stroke-width="0.009839285714285715" />
  </g>
  <g>
    <rect data-type="rect" data-label="" data-x="-1.4" data-y="-0.9249999999999999" x="319.49183303085294" y="391.1433756805808" width="20.326678765880274" height="45.73502722323042" fill="hsl(40, 100%, 50%, 0.35)" stroke="black" stroke-width="0.009839285714285715" />
  </g>
  <g id="crosshair" style="display: none">
    <line id="crosshair-h" y1="0" y2="640" stroke="#666" stroke-width="0.5" />
    <line id="crosshair-v" x1="0" x2="640" stroke="#666" stroke-width="0.5" /><text id="coordinates" font-family="monospace" font-size="12" fill="#666"></text>
  </g>
  <script>
    <![CDATA[
    document.currentScript.parentElement.addEventListener('mousemove', (e) => {
      const svg = e.currentTarget;
      const rect = svg.getBoundingClientRect();
      const x = e.clientX - rect.left;
      const y = e.clientY - rect.top;
      const crosshair = svg.getElementById('crosshair');
      const h = svg.getElementById('crosshair-h');
      const v = svg.getElementById('crosshair-v');
      const coords = svg.getElementById('coordinates');

      crosshair.style.display = 'block';
      h.setAttribute('x1', '0');
      h.setAttribute('x2', '640');
      h.setAttribute('y1', y);
      h.setAttribute('y2', y);
      v.setAttribute('x1', x);
      v.setAttribute('x2', x);
      v.setAttribute('y1', '0');
      v.setAttribute('y2', '640');

      // Calculate real coordinates using inverse transformation
      const matrix = {
        "a": 101.63339382940109,
        "c": 0,
        "e": 471.9419237749546,
        "b": 0,
        "d": -101.63339382940109,
        "f": 320
      };
      // Manually invert and apply the affine transform
      // Since we only use translate and scale, we can directly compute:
      // x' = (x - tx) / sx
      // y' = (y - ty) / sy
      const sx = matrix.a;
      const sy = matrix.d;
      const tx = matrix.e;
      const ty = matrix.f;
      const realPoint = {
        x: (x - tx) / sx,
        y: (y - ty) / sy // Flip y back since we used negative scale
      }

      coords.textContent = `(${realPoint.x.toFixed(2)}, ${realPoint.y.toFixed(2)})`;
      coords.setAttribute('x', (x + 5).toString());
      coords.setAttribute('y', (y - 5).toString());
    });
    document.currentScript.parentElement.addEventListener('mouseleave', () => {
      document.currentScript.parentElement.getElementById('crosshair').style.display = 'none';
    });
    ]]>
  </script>
</svg>