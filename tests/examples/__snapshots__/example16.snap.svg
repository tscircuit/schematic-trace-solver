<svg width="640" height="640" viewBox="0 0 640 640" xmlns="http://www.w3.org/2000/svg">
  <rect width="100%" height="100%" fill="white" />
  <g>
    <polyline data-points="1.4000000000000001,0.09999999999999998 1.4000000000000001,1.0025" data-type="line" data-label="" points="320,600.0000000000001 320,347.9301745635911" fill="none" stroke="red" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="1.4000000000000001,1.0025 1.4000000000000001,1.9049999999999998" data-type="line" data-label="" points="320,347.9301745635911 320,95.86034912718208" fill="none" stroke="red" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="1.4000000000000001,0.30000000000000004 1.4000000000000001,1.2025000000000001" data-type="line" data-label="" points="320,544.139650872818 320,292.06982543640896" fill="none" stroke="red" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="1.4000000000000001,1.2025000000000001 1.4000000000000001,2.105" data-type="line" data-label="" points="320,292.06982543640896 320,40" fill="none" stroke="red" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="1.2000000000000002,0.09999999999999998 1.4000000000000001,0.09999999999999998 1.4000000000000001,1.0025 1.4000000000000001,1.9049999999999998 1.6,1.9049999999999998" data-type="line" data-label="" points="264.1396508728179,600.0000000000001 320,600.0000000000001 320,347.9301745635911 320,95.86034912718208 375.860349127182,95.86034912718208" fill="none" stroke="blue" stroke-width="1" stroke-dasharray="4 2" />
  </g>
  <g>
    <polyline data-points="1.2000000000000002,0.30000000000000004 1.4000000000000001,0.30000000000000004 1.4000000000000001,1.2025000000000001 1.4000000000000001,2.105 1.6,2.105" data-type="line" data-label="" points="264.1396508728179,544.139650872818 320,544.139650872818 320,292.06982543640896 320,40 375.860349127182,40" fill="none" stroke="blue" stroke-width="1" stroke-dasharray="4 2" />
  </g>
  <g id="crosshair" style="display: none">
    <line id="crosshair-h" y1="0" y2="640" stroke="#666" stroke-width="0.5" />
    <line id="crosshair-v" x1="0" x2="640" stroke="#666" stroke-width="0.5" /><text id="coordinates" font-family="monospace" font-size="12" fill="#666"></text>
  </g>
  <script>
    <![CDATA[
    document.currentScript.parentElement.addEventListener('mousemove', (e) => {
      const svg = e.currentTarget;
      const rect = svg.getBoundingClientRect();
      const x = e.clientX - rect.left;
      const y = e.clientY - rect.top;
      const crosshair = svg.getElementById('crosshair');
      const h = svg.getElementById('crosshair-h');
      const v = svg.getElementById('crosshair-v');
      const coords = svg.getElementById('coordinates');

      crosshair.style.display = 'block';
      h.setAttribute('x1', '0');
      h.setAttribute('x2', '640');
      h.setAttribute('y1', y);
      h.setAttribute('y2', y);
      v.setAttribute('x1', x);
      v.setAttribute('x2', x);
      v.setAttribute('y1', '0');
      v.setAttribute('y2', '640');

      // Calculate real coordinates using inverse transformation
      const matrix = {
        "a": 279.30174563591027,
        "c": 0,
        "e": -71.02244389027442,
        "b": 0,
        "d": -279.30174563591027,
        "f": 627.9301745635911
      };
      // Manually invert and apply the affine transform
      // Since we only use translate and scale, we can directly compute:
      // x' = (x - tx) / sx
      // y' = (y - ty) / sy
      const sx = matrix.a;
      const sy = matrix.d;
      const tx = matrix.e;
      const ty = matrix.f;
      const realPoint = {
        x: (x - tx) / sx,
        y: (y - ty) / sy // Flip y back since we used negative scale
      }

      coords.textContent = `(${realPoint.x.toFixed(2)}, ${realPoint.y.toFixed(2)})`;
      coords.setAttribute('x', (x + 5).toString());
      coords.setAttribute('y', (y - 5).toString());
    });
    document.currentScript.parentElement.addEventListener('mouseleave', () => {
      document.currentScript.parentElement.getElementById('crosshair').style.display = 'none';
    });
    ]]>
  </script>
</svg>